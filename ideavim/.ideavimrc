set relativenumber
set number

" https://superuser.com/questions/622898/how-to-turn-off-the-bell-sound-in-intellij
" https://stackoverflow.com/questions/63386803/how-to-turn-off-a-bell-in-intellij-idea
set visualbell

" https://github.com/JetBrains/ideavim/blob/master/doc/emulated-plugins.md
set surround

" https://youtrack.jetbrains.com/issue/VIM-1970
set highlightedyank

" https://youtrack.jetbrains.com/issue/VIM-959
set ideamarks

" https://github.com/JetBrains/ideavim/wiki/%60ideajoin%60-examples
set ideajoin

" https://youtrack.jetbrains.com/issue/VIM-1521
set commentary

" dia daa cia caa
set argtextobj

" die dae cie cae
set textobj-entire

" https://youtrack.jetbrains.com/issue/VIM-1042
set NERDTree

" https://github.com/JetBrains/ideavim/wiki/Emulated-plugins#vim-paragraph-motion
set vim-paragraph-motion

" https://github.com/JetBrains/ideavim/wiki/Emulated-plugins#vim-indent-object
set textobj-indent

set exchange

" remember to assing to Vim the following shortcuts!
" C-h
" C-l
" C-o
" C-i
" C-v
" C-w Vim uses it to switch windows, the IDE behaviour is mapped to C-k instead
" C-k
" C-m Enter alternative
" C-[ A great Esc key alternative! In the ide, moves caret to code block start.
" C-] Go to definition. In the ide, moves caret to code block end.

" consider NOT assigning to Vim the following shortcuts:
" C-e recent files popup window is very useful
" C-b find occurrences in file popup
" C-u go to super method
" C-q info popup
" C-j We already have j in Vim, better use it for Insert Live Template
" C-n class search

" unsure about assigning to Vim or to IDE
" C-f find or move forward?
" C-r replace or redo?
" C-y
" C-c We already have C-[, don't we?
" C-p kind of not very used withou C-n
" C-s doesn't seem very useful in Vim
" C-t update project in IDEA, something something tag stack in Vim
" C-a I don't use it that much in Vim
" C-x same as above

" https://github.com/JetBrains/ideavim/wiki/sethandler
" To be able to say 'same as regular Idea behaviour, but only on insert mode'.
"
" Same as default IDEA action, but only in normal mode. Delete previous char
" in insert mode.
" See also Ctrl + Shift + H for method hierarchy, Ctrl + Alt + H for call
" hierarchy.
" sethandler <C-h> n:ide
" Same as default IDEA action, but only in insert mode. Enter block-visual
" mode in normal mode.
" sethandler <C-v> i:ide

" https://github.com/JetBrains/ideavim/wiki/Select-mode
" set selectmode-=template

"  Mouseless Driven Development by Hadi Hariri https://www.youtube.com/watch?v=UH6YVv9js3s
" https://github.com/JetBrains/ideavim
" https://github.com/Valloric/dotfiles/blob/master/intellij/ideavimrc
" https://resources.jetbrains.com/storage/products/intellij-idea/docs/IntelliJIDEA_ReferenceCard.pdf
let mapleader = " "

" These are leader-based alternative shortcuts for actions whose corresponding
" idea shortcuts require hand-stretching combinations, function keys, Home or
" Insert.
"
" Shift + F6 in idea.
" Alt + R, then R (through the menu bar) also seems to work fine.
" map <Leader>r :action RenameElement<CR>
" Ctrl + F12 in idea.
" map <Leader>s Action(FileStructurePopup)
map s <Action>(SelectIn)
" Perhaps a bit useless compared to search anything.
"map s <Action>(GotoSymbol)
nmap <Leader>s <Action>(FileStructurePopup)
nmap <Leader>S <Action>(StructuralSearchActions)

nmap <c-.> <Action>(ShowIntentionActions)

map <leader>gi <Action>(ImplementMethods)

" Perhaps just use the Idea shortcut Ctrl-Alt-B
" Alt + N, then m (through the menu bar) also seems to work, but it is
" non-unique.
nmap <Leader>gd <Action>(GotoImplementation)
nmap <c-t> <Action>(GotoRelated)
"map <Leader>m <Action>(GotoImplementation)
"map <Leader>d <Action>(GotoImplementation)
" Jump to next/previous error, show error description
" https://stackoverflow.com/questions/13346245/keyboard-shortcut-to-display-error-in-intellij
nmap <Leader>e <Action>(ShowErrorDescription)
" Alt + F7 in idea.
" Find usages in file is Ctrl + F7.
" Alt + E, then F, then U (through the menu bar) also seems to work fine.
nmap <Leader>fu <Action>(FindUsages)
nmap <Leader>gfu <Action>(HighlightUsagesInFile)

" Alt + Insert in idea.
nmap <Leader>gg <Action>(Generate)
" F12
nmap <Leader>w <Action>(HideAllWindows)
nmap <Leader>W <Action>(JumpToLastWindow)
" Possibly redundant given "Run Anything" DoubleCtrl
nmap <Leader>r <Action>(ChooseRunConfiguration)
nmap <Leader>R <Action>(Refactorings.QuickListPopupAction)
nmap <Leader>a <Action>(AnalyzeActionsPopup)

nmap <c-s-i> <Action>(GotoNextError)
nmap <c-s-o> <Action>(GotoPreviousError)
nmap <leader>gh <Action>(GotoRelated)


" The default C-o and C-i behaviours have certain inconsistencies with
" Vim which I can't quite pinpoint.
" I'm using the default IntelliJ behaviours instead.
nmap <C-o> <Action>(Back)
nmap <C-i> <Action>(Forward)
nmap <leader>g; <Action>(JumpToLastChange)
nmap <leader>g, <Action>(JumpToNextChange)

"
" Here are mappings about which I'm less sure.

" This is for going to related symbols. I can't find any effect in the community edition.
" map <Leader>g :action GotoRelated<CR>

" uppercase last inserted text. Perhpas just use gU`[ instead.
" map <Leader>u `[v`]~`]

" Can also use Ctrl-Shift-[
nmap <Leader>[ <Action>(EditorCodeBlockStart)
" Can also use Ctrl-Shift-]
nmap <Leader>] <Action>(EditorCodeBlockEnd)

" This is Ctrl-W in the default keymap, but we are using it for Vim.
" map <C-s> :action EditorSelectWord<CR> " somewhat unconfrotable to type
" map <C-d> :action EditorSelectWord<CR> " ditto
" better to use your two hands!
nmap <leader>gw <Action>(EditorSelectWord)


vnoremap <leader>p "_dP

nnoremap <leader>y "+y
vnoremap <leader>y "+y
nnoremap <leader>Y gg"+yG

inoremap <s-tab> <C-D>

vnoremap <tab> >gv
vnoremap <s-tab> <gv

nnoremap <left> <cmd>tabp<CR>
nnoremap <right> <cmd>tabn<CR>

nnoremap <c-left> <c-w>h
nnoremap <c-right> <c-w>l
nnoremap <c-up> <c-w>k
nnoremap <c-down> <c-w>j

nnoremap <c-s-left> <C-w><
nnoremap <c-s-right> <C-w>>
nnoremap <c-s-up> <C-w>+
nnoremap <c-s-down> <C-w>-

"make Y behave
nnoremap Y y$

"center cursor
nnoremap n nzzzv
nnoremap N Nzzzv
nnoremap J mzJ`v

" nnoremap <expr> k (v:count > 5 ? "m'" . v:count : "") . 'k'
" nnoremap <expr> j (v:count > 5 ? "m'" . v:count : "") . 'j'

vnoremap J :m '>+1<CR>gv=gv
vnoremap K :m '<-2<CR>gv=gv
inoremap <C-k> <esc>:m .-2<CR>==a
inoremap <C-j> <esc>:m .+1<CR>==a

" Feels more symmetrical on ortholinear layouts.
nnoremap & ^
inoremap <C-BS> <C-W>

nmap <c-z> :action ToggleDistractionFreeMode<CR>:set rnu<CR>
